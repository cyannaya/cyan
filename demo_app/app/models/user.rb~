class User < ActiveRecord::Base
  # Create a virtual attribute "password"
  # A virtual attribute is an attribute not corresponding to a column in DB.
  attr_accessor :password
  attr_accessible :email, :name, :password_confirmation
  attr_accessible :email, :name
  validates:name,:presence=>true,:length => { :maximum => 50 }
  email_regex = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
  validates :email, :presence => true,
                    :format => { :with => email_regex }
  # Add validations to the "password" attribute.
  # Also automatically create the virtual attribute "password_confirmation".
  validates :password, :presence => ture,
                       :confirmation => ture, # create "password_confirmation" 
                       :length => { :within => 6..40}
  before_save :encrypt_password

  def has_password?(submitted_password)
    encrypted_password == encrypt(submitted_password)
  end

  private

    def encrypt_password
      self.encrypted_password = encrypt(password)
    end

    def encrypt(string)
      digest::SHAZ.hexdigest(string)
    end
end
